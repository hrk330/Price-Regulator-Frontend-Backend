# Generated by Django 4.2.7 on 2025-10-06 05:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductSearchList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('products', models.JSONField(default=list, help_text='List of product names to search')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingWebsite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('base_url', models.URLField(max_length=500)),
                ('search_url_template', models.CharField(help_text='URL template with {query} placeholder', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('scraping_config', models.JSONField(default=dict, help_text='CSS selectors and parsing rules')),
                ('rate_limit_delay', models.FloatField(default=1.0, help_text='Delay between requests in seconds')),
                ('headers', models.JSONField(default=dict, help_text='Custom headers for requests')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScrapingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('marketplace', models.CharField(choices=[('amazon', 'Amazon'), ('ebay', 'eBay'), ('walmart', 'Walmart'), ('target', 'Target'), ('other', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('products_scraped', models.IntegerField(default=0)),
                ('products_found', models.IntegerField(default=0)),
                ('errors_count', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('task_id', models.CharField(blank=True, help_text='Celery task ID', max_length=255)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scraping.productsearchlist')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraping.scrapingwebsite')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScrapedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255)),
                ('marketplace', models.CharField(choices=[('amazon', 'Amazon'), ('ebay', 'eBay'), ('walmart', 'Walmart'), ('target', 'Target'), ('other', 'Other')], max_length=50)),
                ('search_query', models.CharField(help_text='Original search query used', max_length=255)),
                ('listed_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, help_text='Original price before any discounts', max_digits=10, null=True)),
                ('url', models.URLField(max_length=500)),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('description', models.TextField(blank=True)),
                ('availability', models.BooleanField(default=True)),
                ('stock_status', models.CharField(blank=True, max_length=100)),
                ('seller_name', models.CharField(blank=True, max_length=255)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('review_count', models.IntegerField(blank=True, null=True)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('scraping_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scraping.scrapingjob')),
                ('website', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scraping.scrapingwebsite')),
            ],
            options={
                'ordering': ['-scraped_at'],
                'indexes': [models.Index(fields=['marketplace', 'scraped_at'], name='scraping_sc_marketp_3f6114_idx'), models.Index(fields=['product_name', 'marketplace'], name='scraping_sc_product_d78232_idx')],
            },
        ),
    ]
